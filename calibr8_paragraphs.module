<?php

use Drupal\Component\Utility\Html;
use Drupal\paragraphs\ParagraphInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Render\Element;
use Drupal\paragraphs_edit\Form\ParagraphEditForm;

/**
 * Implements hook_contextual_links_view_alter().
 *
 * Change some contextual links into off_canvas links.
 */
function calibr8_paragraphs_contextual_links_view_alter(&$element, $items) {

  if (isset($element['#links']['paragraphs-editedit-form'])) {

  	$element['#links']['paragraphs-editedit-form']['title'] = t('Edit content');

    $element['#links']['paragraphs-editedit-form']['attributes'] = [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'dialog',
      'data-dialog-renderer' => 'modal',
      'data-dialog-options' => json_encode(['width' => '50%']),
    ];

  }

  // set the title for 'Clone' to 'Duplicate'
  if (isset($element['#links']['paragraphs-editclone-form'])) {
    unset($element['#links']['paragraphs-editclone-form']);
  }

  if (isset($element['#links']['paragraphs-editdelete-form'])) {

    // open the delete form inside a modal
    $element['#links']['paragraphs-editdelete-form']['attributes'] = [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'dialog',
      'data-dialog-renderer' => 'modal',
    ];

  }

  if (isset($element['#links']['calibr8-paragraphsedit-settings'])) {
    $element['#links']['calibr8-paragraphsedit-settings']['attributes'] = [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'dialog',
      'data-dialog-renderer' => 'off_canvas',
      'data-outside-in-edit' => TRUE,
    ];

    $element['#attached']['library'][] = 'outside_in/drupal.off_canvas';
  }
  if (isset($element['#links']['calibr8-paragraphsmove-up'])) {
    $element['#links']['calibr8-paragraphsmove-up']['attributes'] = [
      'class' => ['use-ajax'],
    ];
  }
  if (isset($element['#links']['calibr8-paragraphsmove-down'])) {
    $element['#links']['calibr8-paragraphsmove-down']['attributes'] = [
      'class' => ['use-ajax'],
    ];
  }
  if (isset($element['#links']['calibr8-paragraphsduplicate'])) {
    $element['#links']['calibr8-paragraphsduplicate']['attributes'] = [
      'class' => ['use-ajax'],
    ];
  }
  if (isset($element['#links']['calibr8-paragraphsadd'])) {
    $element['#links']['calibr8-paragraphsadd']['attributes'] = [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'dialog',
      'data-dialog-renderer' => 'off_canvas',
      'data-outside-in-edit' => TRUE,
    ];
  }
  
}

/**
 * Implements hook_form_alter().
 */
function calibr8_paragraphs_form_alter(&$form, $form_state, $form_id) {
  if (substr($form_id, -14) == '_settings_form' && substr($form_id, 0, 10) == 'paragraph_') {

  dsm($form);
  	

  }
}

/**
 * Implements hook_entity_type_build().
 * Register the settings form mode for paragraphs
 *
 * @param \Drupal\Core\Entity\EntityTypeInterface[] $entity_types
 */
function calibr8_paragraphs_entity_type_build(array &$entity_types) {
  $entity_types['paragraph']->setFormClass('settings', ParagraphEditForm::class);
}


/**
 * Implements hook_preprocess_HOOK().
 *
 * Using hook_preprocess_field().
 */
function calibr8_paragraphs_preprocess_field(&$vars) {
  if (empty($vars['field_type']) || $vars['field_type'] !== 'entity_reference_revisions') {
    return;
  }
  $vars['attributes']['data-calibr8-paragraphs'] = $vars['field_name'] . '-' . $vars['element']['#object']->id();
}